// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// generator client {
//  provider = "prisma-client-js"
//}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

//datasource db {
//  provider      = "postgresql"
//  url           = env("DATABASE_URL")
//  directUrl     = env("DIRECT_URL")
//}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}


model Board{
  id              String @id @default(uuid())
  orgId           String
  title           String
  imageId         String
  imageThumbUrl   String 
  imageFullUrl    String 
  imageUserName   String 
  imageLinkHTML   String 

  // To refer the List
  lists           List[]

  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

// @db.Text for longer text

model List {
  id          String @id @default(uuid())
  title       String
  // What we will modify whenever we drag and drop in different position
  // When we will initially fetch the list we will do orderBy with this field
  order       Int

  boardId     String
  // Relation with the Board using the boardId, refrencing to the board's id
  // When we delete a board we instruct it that this list is also to be deleted using cascading
  board       Board @relation(fields:[boardId], references:[id], onDelete: Cascade)

  cards       Card[]

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Its a directive that creates an index on the boardId column in the database.
  // Indexes are used to improve the speed of data retrieval operations on a database table at the cost of additional storage space and potentially slower write operations.
  // By creating an index on these columns, Prisma can improve the performance of queries that filter or sort by these columns.
  @@index([boardId])
}

// The primary purpose of this code snippet is to create an index on the boardId column of a database table. This is typically done to:
// - Improve Query Performance: By indexing the boardId column, queries that filter or join based on this column will be faster. For example, if you frequently query for records where boardId equals a certain value, the index will make these queries more efficient.
// - Optimize Data Access: Indexes help the database engine to quickly locate and access the data without scanning the entire table.

model Card{
  id          String @id @default(uuid())
  title       String
  order       Int
  description String? 

  listId      String
  list List   @relation(fields:[listId], references:[id], onDelete: Cascade)

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([listId])
}

model AuditLog {
  id          String @id @default(uuid())
  orgId       String
  action      String
  entityId    String
  entityType  String
  entityTitle String
  userId      String
  userImage   String 
  userName    String 

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model OrgLimit {
  id          String @id @default(uuid())
  orgId       String @unique
  count       Int @default(0)

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model OrgSubscription {
  id                String @id @default(uuid())
  orgId             String @unique

  // Creating an alias for this using mapping
  // The database will have a column named stripe_customer_id
  // whereas the code will have a column named stripeCustomerId
  stripeCustomerId        String? @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId    String? @unique @map(name: "stripe_subscription_id")
  stripePriceId           String? @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd  DateTime? @map(name: "stripe_current_period_end")
}